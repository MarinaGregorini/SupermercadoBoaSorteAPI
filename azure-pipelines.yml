trigger:
  branches:
    include:
      - main

pool:
  name: default

jobs:
  - job: LintTest
    displayName: "Run Lint Test"
    steps:
      - script: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
        displayName: "Install dependencies"

      - script: |
          source .venv/bin/activate
          flake8 ./app.py ./models.py ./populate_db.py
        displayName: "Run Lint (flake8)"

  - job: TestAPI
    displayName: "Run API Tests"
    dependsOn: LintTest
    steps:
      - script: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
        displayName: "Install dependencies"

      - script: |
          source .venv/bin/activate
          python3 -m flask run --port 5000 &
          sleep 10
        displayName: "Start Flask server"

      - script: |
          source .venv/bin/activate
          python3 tests/teste_api.py
        displayName: "Run tests"

  - job: BuildAndRun
    displayName: "Build and Run Application in Docker (Staging)"
    dependsOn: TestAPI
    steps:
      - script: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
        displayName: "Instalar dependências"

      - task: Docker@2
        displayName: "Build Docker image"
        inputs:
          command: "build"
          Dockerfile: "/Dockerfile"
          tags: "supermercado-api:latest"

      - script: |
          docker run -d -p 8080:8080 --name supermercado-test-container supermercado-api:latest
          sleep 10
          curl --fail http://localhost:8080 || (echo "App não subiu corretamente" && docker logs supermercado-test-container && exit 1)
          docker stop supermercado-test-container
          docker rm supermercado-test-container
        displayName: "Run container and check health"
