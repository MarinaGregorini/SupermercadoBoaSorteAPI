name: Docker Build and Load Test

on:
  pull_request:
    branches:
      - seguranca2

jobs:
  trivy-scan:
    name: Run Trivy Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Scan Dockerfile for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'Dockerfile'
          format: 'table'
          exit-code: '1'

      - name: Scan Helm Chart for config issues and image vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'helm'
          scan-ref: 'helm/'
          security-checks: 'vuln,config'
          format: 'table'
          exit-code: '1'

  build-and-run:
    name: Build and Run Application in Docker (Staging)
    runs-on: ubuntu-latest
    needs: trivy-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t supermercado-api:latest -f Dockerfile .
          
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'supermercado-api:latest'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Run container and check health
        run: |
          docker run -d -p 8080:5000 --name supermercado-test-container supermercado-api:latest
          echo "Aguardando o container subir..."
          sleep 10

          echo "Verificando se a aplicação está no ar..."
          if curl --fail -s http://localhost:8080 > /dev/null; then
            echo "App respondeu com sucesso!"
          else
            echo "App não subiu corretamente"
            docker logs supermercado-test-container
            exit 1
          fi

          docker stop supermercado-test-container
          docker rm supermercado-test-container

  locust:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build-and-run

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Start Flask server
        run: |
          source .venv/bin/activate
          python3 -m flask run --port 5000 &
          sleep 10

      - name: Run Locust
        run: |
          source .venv/bin/activate
          locust -f tests/locustfile.py --host=http://localhost:5000 --headless -u 10 -r 2 -t15s
